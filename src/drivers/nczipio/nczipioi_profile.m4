dnl Process this m4 file to produce 'C' language file.
dnl
dnl If you see this line, you can ignore the next one.
/* Do not edit this file. It is produced from the corresponding .m4 source */
dnl
/*
 *  Copyright (C) 2019, Northwestern University and Argonne National Laboratory
 *  See COPYRIGHT notice in top-level directory.
 */
/* $Id$ */
dnl
include(`foreach.m4')dnl
include(`utils.m4')dnl
include(`nczipioi_profile_timers.m4')dnl
define(`upcase', `translit(`$*', `a-z', `A-Z')')dnl
dnl
define(`CONCATE',dnl
`dnl
    $1$2')dnl
define(`PRINTTIME',dnl
`dnl
            printf("#%%$: $1_mean %lf\n", tmean[$2]);
            printf("#%%$: $1_max %lf\n", tmax[$2]);
            printf("#%%$: $1_min %lf\n", tmin[$2]);
            printf("#%%$: $1_var %lf\n", tvar[$2]);
')dnl

#ifdef HAVE_CONFIG_H
# include <config.h>
#endif

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <mpi.h>

#include <pnc_debug.h>
#include <common.h>
#include <nczipio_driver.h>

/*
 * Report performance profiling
 */
#ifdef PNETCDF_PROFILING
void nczipioi_print_profile(NC_zip *nczipp){
    int i;
    double tmax[NTIMER], tmin[NTIMER], tmean[NTIMER], tvar[NTIMER], tvar_local[NTIMER];

    MPI_Reduce(nczipp->profile.tt, tmax, NTIMER, MPI_DOUBLE, MPI_MAX, 0, nczipp->comm);
    MPI_Reduce(nczipp->profile.tt, tmin, NTIMER, MPI_DOUBLE, MPI_MIN, 0, nczipp->comm);
    MPI_Allreduce(nczipp->profile.tt, tmean, NTIMER, MPI_DOUBLE, MPI_SUM, nczipp->comm);
    for(i = 0; i < NTIMER; i++){
        tmean[i] /= nczipp->np;
        tvar_local[i] = (nczipp->profile.tt[i] - tmean[i]) * (nczipp->profile.tt[i] - tmean[i]);
    }
    MPI_Reduce(tvar_local, tvar, NTIMER, MPI_DOUBLE, MPI_SUM, 0, nczipp->comm);
    
    if (nczipp->rank == 0){
        for(i = 0; i < NTIMER; i++){
            tvar[i] /= nczipp->np;
        }

foreach(`t', TIMERS, `PRINTTIME(translit(t, `()'))')dnl
    }
}
#endif




