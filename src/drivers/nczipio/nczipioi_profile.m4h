dnl Process this m4 file to produce 'C' language file.
dnl
dnl If you see this line, you can ignore the next one.
/* Do not edit this file. It is produced from the corresponding .m4 source */
dnl
/*
 *  Copyright (C) 2018, Northwestern University and Argonne National Laboratory
 *  See COPYRIGHT notice in top-level directory.
 */
/* $Id$ */
dnl
include(`foreach.m4')dnl
include(`utils.m4')dnl
include(`nczipioi_profile_timers.m4')dnl
define(`upcase', `translit(`$*', `a-z', `A-Z')')dnl
#ifdef PNETCDF_PROFILING

#define NC_ZIP_TIMER_START(A) nczipp->profile.st[A] = MPI_Wtime(); 
#define NC_ZIP_TIMER_STOP(A)  nczipp->profile.tt[A] += MPI_Wtime() - nczipp->profile.st[A];
#define NC_ZIP_TIMER_STOPEX(A, B)  { \
    nczipp->profile.tmp = MPI_Wtime(); \
    nczipp->profile.tt[A] += nczipp->profile.tmp - nczipp->profile.st[A]; \
    nczipp->profile.tt[B] -= nczipp->profile.tmp - nczipp->profile.st[A]; \
}

define(`CONCATE',dnl
`dnl
$1$2 $3')dnl
define(`TMRNAMEDEF',dnl
`CONCATE(`#define NC_ZIP_TIMER_', upcase($1), $2)'
)dnl
dnl
foreach(`t', TIMERS, `TMRNAMEDEF(translit(t, `()'))')dnl

dnl
typedef struct NC_zip_timers {
    /* Profiling information */
    double st[NTIMER];
    double tt[NTIMER];
    double tmp;
} NC_zip_timers;

#else

#define NC_ZIP_TIMER_START(A)
#define NC_ZIP_TIMER_STOP(A)
#define NC_ZIP_TIMER_STOPEX(A, B) 

#endif

